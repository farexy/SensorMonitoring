//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SensorMonitoring.BusinessLogin.SensorReadingServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SensorReadingServiceReference.IDataServiceOf_SensorReadingDto")]
    public interface IDataServiceOf_SensorReadingDto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/GetItem", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/GetItemResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SensorMonitoring.Data.DTO.SensorReadingDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SensorMonitoring.Data.DTO.IModelDto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SensorMonitoring.Data.DTO.SensorReadingDto[]))]
        SensorMonitoring.Data.DTO.SensorReadingDto GetItem(object[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/GetItem", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/GetItemResponse")]
        System.Threading.Tasks.Task<SensorMonitoring.Data.DTO.SensorReadingDto> GetItemAsync(object[] keys);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/Get", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/GetResponse")]
        SensorMonitoring.Data.DTO.SensorReadingDto[] Get();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/Get", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/GetResponse")]
        System.Threading.Tasks.Task<SensorMonitoring.Data.DTO.SensorReadingDto[]> GetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/UpdateItem", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/UpdateItemResponse")]
        void UpdateItem(SensorMonitoring.Data.DTO.SensorReadingDto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/UpdateItem", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/UpdateItemResponse")]
        System.Threading.Tasks.Task UpdateItemAsync(SensorMonitoring.Data.DTO.SensorReadingDto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/AddItem", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/AddItemResponse")]
        void AddItem(SensorMonitoring.Data.DTO.SensorReadingDto item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataServiceOf_SensorReadingDto/AddItem", ReplyAction="http://tempuri.org/IDataServiceOf_SensorReadingDto/AddItemResponse")]
        System.Threading.Tasks.Task AddItemAsync(SensorMonitoring.Data.DTO.SensorReadingDto item);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataServiceOf_SensorReadingDtoChannel : SensorMonitoring.BusinessLogin.SensorReadingServiceReference.IDataServiceOf_SensorReadingDto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataServiceOf_SensorReadingDtoClient : System.ServiceModel.ClientBase<SensorMonitoring.BusinessLogin.SensorReadingServiceReference.IDataServiceOf_SensorReadingDto>, SensorMonitoring.BusinessLogin.SensorReadingServiceReference.IDataServiceOf_SensorReadingDto {
        
        public DataServiceOf_SensorReadingDtoClient() {
        }
        
        public DataServiceOf_SensorReadingDtoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataServiceOf_SensorReadingDtoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceOf_SensorReadingDtoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataServiceOf_SensorReadingDtoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SensorMonitoring.Data.DTO.SensorReadingDto GetItem(object[] keys) {
            return base.Channel.GetItem(keys);
        }
        
        public System.Threading.Tasks.Task<SensorMonitoring.Data.DTO.SensorReadingDto> GetItemAsync(object[] keys) {
            return base.Channel.GetItemAsync(keys);
        }
        
        public SensorMonitoring.Data.DTO.SensorReadingDto[] Get() {
            return base.Channel.Get();
        }
        
        public System.Threading.Tasks.Task<SensorMonitoring.Data.DTO.SensorReadingDto[]> GetAsync() {
            return base.Channel.GetAsync();
        }
        
        public void UpdateItem(SensorMonitoring.Data.DTO.SensorReadingDto item) {
            base.Channel.UpdateItem(item);
        }
        
        public System.Threading.Tasks.Task UpdateItemAsync(SensorMonitoring.Data.DTO.SensorReadingDto item) {
            return base.Channel.UpdateItemAsync(item);
        }
        
        public void AddItem(SensorMonitoring.Data.DTO.SensorReadingDto item) {
            base.Channel.AddItem(item);
        }
        
        public System.Threading.Tasks.Task AddItemAsync(SensorMonitoring.Data.DTO.SensorReadingDto item) {
            return base.Channel.AddItemAsync(item);
        }
    }
}
